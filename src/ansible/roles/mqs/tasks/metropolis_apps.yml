- name: Create dir for Metropolis Apps
  file:
    path: "{{ metropolis_apps_dir }}"
    state: directory
    owner: "{{ ansible_user }}"
  tags: _metropolis_apps_download

- name: Download Metropolis Apps
  shell: /opt/ngc-cli/ngc registry resource download-version {{ item }}
  args:
    chdir: "{{ metropolis_apps_dir }}"
  with_items:
    - "{{ metropolis_apps_ngc_path }}"
    - "{{ metropolis_apps_data_ngc_path }}"
  become_user: "{{ ansible_user }}"
  tags: _metropolis_apps_download

# extract the downloaded files
- name: Extract Metropolis Apps [1]
  shell: |
    cd "{{ metropolis_apps_dir }}"
    cd metropolis-apps-standalone*
    tar -xvf metropolis-apps-standalone*.tar.gz
    mv standalone-deployment "{{ metropolis_apps_dir }}/"
    sudo chown -R "{{ ansible_user }}":"{{ ansible_user }}" "{{ metropolis_apps_dir }}/standalone-deployment"
  tags: _mqs_extract

# extract the downloaded files
- name: Extract Metropolis Apps [2]
  shell: |
    cd "{{ metropolis_apps_dir }}"
    cd metropolis-apps-sample-input-data*
    tar -xvf metropolis-apps-data*.tar.gz
    mv metropolis-apps-data "{{ metropolis_apps_dir }}/"
    sudo chown -R "{{ ansible_user }}":"{{ ansible_user }}" "{{ metropolis_apps_dir }}/metropolis-apps-data"
  tags: _mqs_extract
#
# Occupancy Analytics
# https://developer.nvidia.com/docs/mdx/dev-guide/text/MDX_People_Analytics_App.html#deploy

# edit the metropolis apps init file
- name: Edit Metropolis Apps env file
  ini_file:
    dest: "{{ metropolis_apps_dir }}/standalone-deployment/docker-compose/foundational/.env"
    section: ""
    option: "{{ item.option }}"
    value: "{{ item.value }}"
  with_items:
    - {
        option: "MDX_SAMPLE_APPS_DIR",
        value: '"{{ metropolis_apps_dir }}/standalone-deployment/docker-compose"',
      }
    - {
        option: "MDX_DATA_DIR",
        value: '"{{ metropolis_apps_dir }}/metropolis-apps-data"',
      }
    - { option: "HOST_IP", value: '"0.0.0.0"' }
  tags: _mqs_occupancy_env

# add aliases to start apps
- name: Alias to start MTMC (start-mtmc-e2e, start-mtmc-playback)
  lineinfile:
    path: "/home/{{ ansible_user }}/.bashrc"
    line: "alias start-mtmc-{{ item }}='(cd {{ metropolis_apps_dir }}/standalone-deployment/docker-compose && docker compose -f foundational/mdx-foundational.yml -f mtmc-app/mdx-mtmc-app.yml --profile {{ item }} up -d --pull always --build --force-recreate)'"
    create: yes
    state: present
  become_user: "{{ ansible_user }}"
  with_items:
    - e2e
    - playback
  tags: __mdx_aliases

- name: Alias to stop MTMC (stop-mtmc-e2e, stop-mtmc-playback)
  lineinfile:
    path: "/home/{{ ansible_user }}/.bashrc"
    line: "alias stop-mtmc-{{ item }}='(cd {{ metropolis_apps_dir }}/standalone-deployment/docker-compose && docker compose -f foundational/mdx-foundational.yml -f mtmc-app/mdx-mtmc-app.yml --profile {{ item }} down)'"
    create: yes
    state: present
  become_user: "{{ ansible_user }}"
  with_items:
    - e2e
    - playback
  tags: __mdx_aliases

- name: Alias to start RTLS (start-rtlc-e2e, start-rtlc-playback)
  lineinfile:
    path: "/home/{{ ansible_user }}/.bashrc"
    line: "alias start-rtlc-{{ item }}='(cd {{ metropolis_apps_dir }}/standalone-deployment/docker-compose &&  docker compose -f foundational/mdx-foundational.yml -f rtls-app/mdx-rtls-app.yml --profile {{ item }} up -d --pull always --build --force-recreate)'"
    create: yes
    state: present
  with_items:
    - e2e
    - playback
  become_user: "{{ ansible_user }}"
  tags: __mdx_aliases

- name: Alias to stop RTLS (stop-rtlc-e2e, stop-rtlc-playback)
  lineinfile:
    path: "/home/{{ ansible_user }}/.bashrc"
    line: "alias stop-rtlc-{{ item }}='(cd {{ metropolis_apps_dir }}/standalone-deployment/docker-compose && docker compose -f foundational/mdx-foundational.yml -f rtls-app/mdx-rtls-app.yml --profile {{ item }} down)'"
    create: yes
    state: present
  with_items:
    - e2e
    - playback
  become_user: "{{ ansible_user }}"
  tags: __mdx_aliases

- name: Aliases to start Occupancy Analytics E2E Apps (OA) (start-oa-e2e, start-oa-playback)
  lineinfile:
    path: "/home/{{ ansible_user }}/.bashrc"
    line: "alias start-oa-{{ item }}='(cd {{ metropolis_apps_dir }}/standalone-deployment/docker-compose && docker compose -f foundational/mdx-foundational.yml -f people-analytics-app/mdx-people-analytics-app.yml --profile e2e up -d --pull always --build --force-recreate)'"
    create: yes
    state: present
  with_items:
    - e2e
    - playback
  become_user: "{{ ansible_user }}"
  tags: __mdx_aliases

- name: Aliases to stop Occupancy Analytics Apps (OA) (stop-oa-e2e, stop-oa-playback)
  lineinfile:
    path: "/home/{{ ansible_user }}/.bashrc"
    line: "alias stop-oa-{{ item }}='(cd {{ metropolis_apps_dir }}/standalone-deployment/docker-compose && docker compose -f foundational/mdx-foundational.yml -f people-analytics-app/mdx-people-analytics-app.yml --profile {{ item }} down'"
    create: yes
    state: present
  become_user: "{{ ansible_user }}"
  with_items:
    - e2e
    - playback
  tags: __mdx_aliases

- name: Alias to start Occupancy Heatmap App (OA) (start-oh)
  lineinfile:
    path: "/home/{{ ansible_user }}/.bashrc"
    line: "alias start-oh='(cd {{ metropolis_apps_dir }}/standalone-deployment/docker-compose && docker compose -f ./heatmap-app/mdx-heatmap-app.yml --env-file ./foundational/.env up -d --pull always --build --force-recreate)'"
    create: yes
    state: present
  become_user: "{{ ansible_user }}"
  tags: __mdx_aliases

- name: Alias to stop Occupancy Heatmap App (OA) (stop-oh)
  lineinfile:
    path: "/home/{{ ansible_user }}/.bashrc"
    line: "alias start-oh='(cd {{ metropolis_apps_dir }}/standalone-deployment/docker-compose && docker compose -f ./heatmap-app/mdx-heatmap-app.yml --env-file ./foundational/.env down)'"
    create: yes
    state: present
  become_user: "{{ ansible_user }}"
  tags: __mdx_aliases
